breakpoint;
alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP/512)]* 512) + (SP % 512);
alias sysCallno S1;
alias filename S2;
alias ret S3;
alias currentFat S4;
ret=0;
[physicalSP - 2] = ret;
sysCallno = [physicalSP - 1]; 
filename = [physicalSP - 3];

if(sysCallno == 9) then                       //checking syscall is 9

currentFat = FAT;

while(1) do 

if(currentFat == 3072) then
ret=-1;
break;
endif;

if([currentFat + 0] == filename) then
break;
endif;

currentFat = currentFat + 8;
endwhile;

if(ret == -1) then                           //check if filename is present
[physicalSP - 2] = ret;

else

alias i S5;

i=0;

while(i<6) do

if([PTBR + i + 1] == "01" || [PTBR + i + 1] == "11") then          //check if the page is valid

alias mempage S6;
mempage = [PTBR + i];

[MEM_LIST + mempage] = [MEM_LIST + mempage] - 1;

else

if([PTBR + i] >=448) then                           //check if in swap area

alias diskpage S6;

diskpage = [PTBR + i];

[DISK_LIST + diskpage] = [DISK_LIST + diskpage] - 1;

store(6, 20);

endif;                                              //check if in swap area

endif;                                                     //check if the page is valid

i=i+2;

endwhile;

i= 512;

load(1,[currentFat + 2]);

while (1) do

if([i]==-1 || [i]=="") then

while(i < 515) do

[PTBR + 2*(i - 512)] = -1;
[PTBR + 2*(i - 512) +1] = "00";

i=i+1;

endwhile;

break;
endif;

[PTBR + 2*(i - 512)] = [i];
[PTBR + 2*(i - 512) +1] = "00";

i=i+1;

endwhile;

alias curPID S10;
alias curPCB S11;

curPID = (PTBR - 1024)/8;
curPCB = READY_LIST + 32*curPID;
i=0;

while(i<8) do

alias fileindex S12;
fileindex = [curPCB + 15 + 2*i];

if(fileindex != -1) then                                //check if file present

[FILE_TABLE + 2*fileindex + 1] = [FILE_TABLE + 2*fileindex + 1] - 1;

if([FILE_TABLE + 2*fileindex + 1] == 0)  then         // checking the open_count is 0

[FILE_TABLE + 2*fileindex + 0] = -1;

endif;                                            // checking the open_count is 0  

[curPCB + 15 + i*2 + 0] = -1;
[curPCB + 15 + i*2 + 1] = -1;

endif;                                           //check if file present

i=i+1;
endwhile;

SP = 3*512;
physicalSP = ([PTBR + 2 * (SP/512)]* 512) + (SP % 512);
[physicalSP] = 0;

endif;                                       //check if filename is present

endif;                                        //checking syscall is 9

if(sysCallno == 11) then                       //checking syscall is 11

ret = (PTBR - 1024)/8;
[physicalSP - 2] = ret;

endif;                                         //checking syscall is 11

if(sysCallno == 12) then                       //checking syscall is 12

alias curPID S5;
alias curPCB S6;

curPID = (PTBR - 1024)/8;
curPCB = READY_LIST + 32*curPID;

[physicalSP - 2] = [curPCB +31];

endif;                                         //checking syscall is 12

ireturn;
